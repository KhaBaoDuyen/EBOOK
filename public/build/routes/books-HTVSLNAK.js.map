{
  "version": 3,
  "sources": ["empty-module:~/utils/db.server", "empty-module:~/models/book.server", "../../../app/routes/books.tsx"],
  "sourcesContent": ["module.exports = {};", "module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\books.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\books.tsx\");\n  import.meta.hot.lastModified = \"1759476370758.084\";\n}\n// REMIX HMR END\n\nimport { useLoaderData } from \"@remix-run/react\";\nimport db from \"~/utils/db.server\";\nimport Book from \"~/models/book.server\";\nexport async function loader({\n  request\n}) {\n  await db;\n  const books = await Book.find().lean();\n  return new Response(JSON.stringify(books), {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n}\nexport default function BooksPage() {\n  _s();\n  const books = useLoaderData();\n  return <div className=\"p-5\">\r\n      <h1 className=\"text-2xl font-bold\">Danh s\u00E1ch s\u00E1ch</h1>\r\n      <ul className=\"mt-4\">\r\n        {books.map(book => <li key={book._id}>{book.title} - {book.author}</li>)}\r\n      </ul>\r\n    </div>;\n}\n_s(BooksPage, \"3CwlB0zIDPeezP+hJbuIf8psgu4=\", false, function () {\n  return [useLoaderData];\n});\n_c = BooksPage;\nvar _c;\n$RefreshReg$(_c, \"BooksPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACAlB;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACsBlB,gBAAe;AACf,kBAAiB;AAgBX;AAtCN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,iCAAmC,EAAE;AAAA,EAC9E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwB;AACxB,cAAY,IAAI,eAAe;AACjC;AAiBe,SAAR,YAA6B;AAClC,KAAG;AACH,QAAM,QAAQ,cAAc;AAC5B,SAAO,mDAAC,SAAI,WAAU,OAClB;AAAA,uDAAC,QAAG,WAAU,sBAAqB,oCAAnC;AAAA;AAAA;AAAA;AAAA,WAAiD;AAAA,IACjD,mDAAC,QAAG,WAAU,QACX,gBAAM,IAAI,UAAQ,mDAAC,QAAmB;AAAA,WAAK;AAAA,MAAM;AAAA,MAAI,KAAK;AAAA,SAA/B,KAAK,KAAd;AAAA;AAAA;AAAA;AAAA,WAA+C,CAAK,KADzE;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAJG;AAAA;AAAA;AAAA;AAAA,SAKL;AACJ;AACA,GAAG,WAAW,gCAAgC,OAAO,WAAY;AAC/D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
