{
  "version": 3,
  "sources": ["../../../app/routes/$category.$sub.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\$category.$sub.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\$category.$sub.tsx\");\n  import.meta.hot.lastModified = \"1759482759580.434\";\n}\n// REMIX HMR END\n\nimport { useParams } from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport categories from \"../../public/data/categories.json\";\nimport { faBook } from \"@fortawesome/free-solid-svg-icons\";\n\n//==================[ COMPONENT ]====================\nimport Button from \"~/components/users/Buttons/Button\";\nimport Section from \"~/components/users/Section\";\nimport CardRanking from \"~/components/users/Cards/CardRanking\";\nimport BookSlider from \"~/components/users/Slider/BookSlider\";\nexport default function SubCategoryPage() {\n  _s();\n  const {\n    category,\n    sub\n  } = useParams();\n  const currentCategory = categories.find(cat => cat.slug === category);\n  if (!currentCategory) {\n    return <div className=\"p-5 text-white\">\r\n        <h1 className=\"text-2xl font-bold\">Kh\u00F4ng t\u00ECm th\u1EA5y danh m\u1EE5c!</h1>\r\n      </div>;\n  }\n  // ---------------[ LAY SAN PHAM RANDOW GAN NHAT ]------------\n\n  const [projects, setProjects] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const currentBook = projects[currentIndex];\n  const dataRandom = () => {\n    fetch(\"/data/listBook.json\").then(res => res.json()).then(data => {\n      const shuffled = [...data].sort(() => 0.5 - Math.random());\n      setProjects(shuffled.slice(0, 5));\n    }).catch(err => console.error(err));\n  };\n  useEffect(() => {\n    dataRandom();\n  }, []);\n\n  // ---------------[ LAY SAN PHAM ]------------\n  const [categores, setCaregory] = useState([]);\n  const fetchProjects = () => {\n    fetch(\"/data/listBook.json\").then(res => res.json()).then(data => {\n      setCaregory(data);\n    }).catch(err => console.error(err));\n  };\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  return <>\r\n      <div className=\"bg-sec1 h-full !mx-auto py-[7rem] text-white\" style={{\n      backgroundImage: currentBook ? `url(${currentBook?.cover})` : undefined,\n      backgroundColor: \"rgba(0,0,0,0.6)\",\n      backgroundBlendMode: \"darken\"\n    }}>\r\n        <div className=\"container !mx-auto flex  items-center justify-center w-full\">\r\n          <div className=\"basis-3/5 flex flex-col gap-3\">\r\n            <span className=\" flex items-center gap-5 pr-5\">\r\n              <label htmlFor=\"subCategory\" className=\"block text-2xl text-gray-500 mb-2 font-semibold\">\r\n                {currentCategory.name}\r\n              </label>\r\n              {currentCategory.subCategories ? <div className=\" text-white\">\r\n                  <select id=\"subCategory\" className=\"px-5 py-3 bg-white/20 backdrop-blur-md border border-white/30 \r\n                  rounded-md text-white focus:outline-none focus:ring-1 focus:ring-emerald-700\" defaultValue=\"\">\r\n                    <option value=\"\">T\u1EA5t c\u1EA3 danh m\u1EE5c</option>\r\n                    {currentCategory.subCategories.map(sub => <option key={sub.slug} value={sub.slug} className=\"bg-black/80 p-5 text-white\">\r\n                        {sub.name}\r\n                      </option>)}\r\n                  </select>\r\n\r\n                </div> : <p className=\"italic text-gray-400\"></p>}\r\n            </span>\r\n            <h1 className=\"!font-bold\">Kh\u00E1m ph\u00E1 th\u1EBF gi\u1EDBi s\u00E1ch Waka v\u1EDBi h\u01A1n 3500+ S\u00E1ch \u0111i\u1EC7n t\u1EED, S\u00E1ch n\u00F3i v\u00E0 Truy\u1EC7n tranh</h1>\r\n\r\n            <div className=\"flex flex-col gap-5\">\r\n              <span className=\"  bg-white/20 p-2 !font-bold w-max rounded-lg rounded-bl-none\">\r\n                SMARTBOOK \u0110\u1EC0 XU\u1EA4T\r\n              </span>\r\n              {currentBook && <div className=\"space-y-3\">\r\n                  <h1 className=\"text-3xl font-bold\">{currentBook?.title}</h1>\r\n                  <p className=\"text-gray-300 line-clamp-5 w-[80%]\">{currentBook?.description}</p>\r\n\r\n                  <Button text=\"\u0110\u1ECDc s\u00E1ch\" icon={faBook} href={currentBook?.link} iconPosition=\"left\" />\r\n                </div>}\r\n            </div>\r\n          </div>\r\n          <span className=\"basis-2/5 \">\r\n            <BookSlider projects={projects} onSlideChange={setCurrentIndex} />\r\n          </span>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <main className=\"container !mx-auto\">\r\n        <Section title=\"M\u1EDBi nh\u1EA5t\" books={categores} />\r\n\r\n        <section>\r\n          <h1 className=\"text-xl !font-bold\">T\u1EA5t c\u1EA3 c\u00E1c s\u00E1ch</h1>\r\n\r\n          <div className=\"flex flex-wrap w-full gap-5 p-5\">\r\n            {categores.map((book, i) => <CardRanking key={i} cover={book.cover} title={book.title} author={book.author} status={book.status} description={book.description} link={book.link} />)}\r\n          </div>\r\n        </section>\r\n\r\n      </main>\r\n\r\n    </>;\n}\n_s(SubCategoryPage, \"EP+HuvXuUoXXuNRr+t7ZsPfriIU=\", false, function () {\n  return [useParams];\n});\n_c = SubCategoryPage;\nvar _c;\n$RefreshReg$(_c, \"SubCategoryPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "sub"]
}
